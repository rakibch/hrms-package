declare function __VLS_template(): {
    label?(_: {}): any;
    description?(_: {}): any;
};
declare const __VLS_component: import('vue').DefineComponent<{
    modelValue: import('vue').PropType<boolean>;
    label: {
        type: globalThis.PropType<string>;
        default: string;
    };
    size: {
        type: globalThis.PropType<"sm" | "md" | "lg">;
        default: string;
    };
    disabled: {
        type: globalThis.PropType<boolean>;
        default: boolean;
    };
    inline: {
        type: globalThis.PropType<boolean>;
        default: boolean;
    };
    checked: {
        type: globalThis.PropType<boolean>;
        default: boolean;
    };
    position: {
        type: globalThis.PropType<"top" | "bottom" | "right" | "left">;
        default: string;
    };
}, {}, unknown, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    change: (...args: any[]) => void;
}, string, import('vue').PublicProps, Readonly<globalThis.ExtractPropTypes<{
    modelValue: import('vue').PropType<boolean>;
    label: {
        type: globalThis.PropType<string>;
        default: string;
    };
    size: {
        type: globalThis.PropType<"sm" | "md" | "lg">;
        default: string;
    };
    disabled: {
        type: globalThis.PropType<boolean>;
        default: boolean;
    };
    inline: {
        type: globalThis.PropType<boolean>;
        default: boolean;
    };
    checked: {
        type: globalThis.PropType<boolean>;
        default: boolean;
    };
    position: {
        type: globalThis.PropType<"top" | "bottom" | "right" | "left">;
        default: string;
    };
}>> & {
    onChange?: ((...args: any[]) => any) | undefined;
}, {
    label: string;
    size: "sm" | "md" | "lg";
    disabled: boolean;
    inline: boolean;
    checked: boolean;
    position: "left" | "right" | "top" | "bottom";
}, {}>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
