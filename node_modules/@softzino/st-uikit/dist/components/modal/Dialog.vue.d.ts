import * as heroIcons from "@heroicons/vue/24/solid";
type HeroIconName = keyof typeof heroIcons;
type footerAlign = "left" | "center" | "right";
type layoutAlign = "left" | "center";
interface Icon {
    iconName: HeroIconName;
    iconClass: string;
}
interface title {
    title: string;
    titleClass: string;
}
interface Props {
    isOpen: boolean;
    disableOutSideClick?: boolean;
    closeButton?: boolean;
    footerAlign?: footerAlign;
    layoutAlign?: layoutAlign;
    icon?: Icon;
    title?: title;
    showIcon?: boolean;
}
declare function __VLS_template(): {
    icon?(_: {
        icon: Icon | undefined;
    }): any;
    title?(_: {
        title: title | undefined;
    }): any;
    content?(_: {}): any;
    footer?(_: {}): any;
};
declare const __VLS_component: import('vue').DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<Props>, {
    disableOutSideClick: boolean;
    closeButton: boolean;
    footerAlign: string;
    layoutAlign: string;
    showIcon: boolean;
}>, {}, unknown, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    "modal-close": (...args: any[]) => void;
}, string, import('vue').PublicProps, Readonly<globalThis.ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<Props>, {
    disableOutSideClick: boolean;
    closeButton: boolean;
    footerAlign: string;
    layoutAlign: string;
    showIcon: boolean;
}>>> & {
    "onModal-close"?: ((...args: any[]) => any) | undefined;
}, {
    showIcon: boolean;
    disableOutSideClick: boolean;
    closeButton: boolean;
    footerAlign: footerAlign;
    layoutAlign: layoutAlign;
}, {}>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
